//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FirstProject.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Store1Entities : DbContext
    {
        public Store1Entities()
            : base("name=Store1Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Ambalaj> Ambalajs { get; set; }
        public virtual DbSet<Persoana> Persoanas { get; set; }
        public virtual DbSet<Produse> Produses { get; set; }
        public virtual DbSet<Receptie> Recepties { get; set; }
        public virtual DbSet<TipProdu> TipProdus { get; set; }
        public virtual DbSet<Vanzari> Vanzaris { get; set; }
    
        public virtual ObjectResult<Nullable<int>> actualizarePret(Nullable<int> iDTipProdus, Nullable<int> pretKg)
        {
            var iDTipProdusParameter = iDTipProdus.HasValue ?
                new ObjectParameter("IDTipProdus", iDTipProdus) :
                new ObjectParameter("IDTipProdus", typeof(int));
    
            var pretKgParameter = pretKg.HasValue ?
                new ObjectParameter("PretKg", pretKg) :
                new ObjectParameter("PretKg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("actualizarePret", iDTipProdusParameter, pretKgParameter);
        }
    
        public virtual ObjectResult<string> CodQR(Nullable<int> iDProdus)
        {
            var iDProdusParameter = iDProdus.HasValue ?
                new ObjectParameter("IDProdus", iDProdus) :
                new ObjectParameter("IDProdus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CodQR", iDProdusParameter);
        }
    
        public virtual ObjectResult<completVerificareVanzari_Result> completVerificareVanzari(ObjectParameter iDVanzari, Nullable<int> iDProdus)
        {
            var iDProdusParameter = iDProdus.HasValue ?
                new ObjectParameter("IDProdus", iDProdus) :
                new ObjectParameter("IDProdus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<completVerificareVanzari_Result>("completVerificareVanzari", iDVanzari, iDProdusParameter);
        }
    
        public virtual ObjectResult<deleteAmbalaj_Result> deleteAmbalaj(Nullable<int> iDAmbalaj)
        {
            var iDAmbalajParameter = iDAmbalaj.HasValue ?
                new ObjectParameter("IDAmbalaj", iDAmbalaj) :
                new ObjectParameter("IDAmbalaj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<deleteAmbalaj_Result>("deleteAmbalaj", iDAmbalajParameter);
        }
    
        public virtual ObjectResult<deletePersoana_Result> deletePersoana(Nullable<int> iDPersoana)
        {
            var iDPersoanaParameter = iDPersoana.HasValue ?
                new ObjectParameter("IDPersoana", iDPersoana) :
                new ObjectParameter("IDPersoana", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<deletePersoana_Result>("deletePersoana", iDPersoanaParameter);
        }
    
        public virtual ObjectResult<deleteProduse_Result> deleteProduse(Nullable<int> iDProdus)
        {
            var iDProdusParameter = iDProdus.HasValue ?
                new ObjectParameter("IDProdus", iDProdus) :
                new ObjectParameter("IDProdus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<deleteProduse_Result>("deleteProduse", iDProdusParameter);
        }
    
        public virtual ObjectResult<deleteReceptie_Result> deleteReceptie(Nullable<int> iDReceptie)
        {
            var iDReceptieParameter = iDReceptie.HasValue ?
                new ObjectParameter("IDReceptie", iDReceptie) :
                new ObjectParameter("IDReceptie", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<deleteReceptie_Result>("deleteReceptie", iDReceptieParameter);
        }
    
        public virtual ObjectResult<deleteTipProduse_Result> deleteTipProduse(Nullable<int> iDTipProdus)
        {
            var iDTipProdusParameter = iDTipProdus.HasValue ?
                new ObjectParameter("IDTipProdus", iDTipProdus) :
                new ObjectParameter("IDTipProdus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<deleteTipProduse_Result>("deleteTipProduse", iDTipProdusParameter);
        }
    
        public virtual ObjectResult<deleteVanzari_Result> deleteVanzari(Nullable<int> iDVanzari)
        {
            var iDVanzariParameter = iDVanzari.HasValue ?
                new ObjectParameter("IDVanzari", iDVanzari) :
                new ObjectParameter("IDVanzari", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<deleteVanzari_Result>("deleteVanzari", iDVanzariParameter);
        }
    
        public virtual ObjectResult<InfoCod_Result> InfoCod(string codQR)
        {
            var codQRParameter = codQR != null ?
                new ObjectParameter("CodQR", codQR) :
                new ObjectParameter("CodQR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InfoCod_Result>("InfoCod", codQRParameter);
        }
    
        public virtual int insertAmbalaj(string denumire, ObjectParameter iDAmbalaj)
        {
            var denumireParameter = denumire != null ?
                new ObjectParameter("Denumire", denumire) :
                new ObjectParameter("Denumire", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertAmbalaj", denumireParameter, iDAmbalaj);
        }
    
        public virtual int insertPersoana(string nume, ObjectParameter iDPersoana)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertPersoana", numeParameter, iDPersoana);
        }
    
        public virtual int insertProduse(ObjectParameter iDProdus, Nullable<int> iDAmbalaj, Nullable<int> iDPersoana, string status, Nullable<int> iDTipProdus)
        {
            var iDAmbalajParameter = iDAmbalaj.HasValue ?
                new ObjectParameter("IDAmbalaj", iDAmbalaj) :
                new ObjectParameter("IDAmbalaj", typeof(int));
    
            var iDPersoanaParameter = iDPersoana.HasValue ?
                new ObjectParameter("IDPersoana", iDPersoana) :
                new ObjectParameter("IDPersoana", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var iDTipProdusParameter = iDTipProdus.HasValue ?
                new ObjectParameter("IDTipProdus", iDTipProdus) :
                new ObjectParameter("IDTipProdus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertProduse", iDProdus, iDAmbalajParameter, iDPersoanaParameter, statusParameter, iDTipProdusParameter);
        }
    
        public virtual int insertReceptie(ObjectParameter iDReceptie, Nullable<int> iDProdus, Nullable<int> iDPersoana, string observatii, Nullable<bool> rebut)
        {
            var iDProdusParameter = iDProdus.HasValue ?
                new ObjectParameter("IDProdus", iDProdus) :
                new ObjectParameter("IDProdus", typeof(int));
    
            var iDPersoanaParameter = iDPersoana.HasValue ?
                new ObjectParameter("IDPersoana", iDPersoana) :
                new ObjectParameter("IDPersoana", typeof(int));
    
            var observatiiParameter = observatii != null ?
                new ObjectParameter("Observatii", observatii) :
                new ObjectParameter("Observatii", typeof(string));
    
            var rebutParameter = rebut.HasValue ?
                new ObjectParameter("Rebut", rebut) :
                new ObjectParameter("Rebut", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertReceptie", iDReceptie, iDProdusParameter, iDPersoanaParameter, observatiiParameter, rebutParameter);
        }
    
        public virtual int insertTipProduse(string nume, string unitateMasura, Nullable<int> pretKg, Nullable<int> cantitate, Nullable<int> termenGarantie, ObjectParameter iDTipProdus)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            var unitateMasuraParameter = unitateMasura != null ?
                new ObjectParameter("UnitateMasura", unitateMasura) :
                new ObjectParameter("UnitateMasura", typeof(string));
    
            var pretKgParameter = pretKg.HasValue ?
                new ObjectParameter("PretKg", pretKg) :
                new ObjectParameter("PretKg", typeof(int));
    
            var cantitateParameter = cantitate.HasValue ?
                new ObjectParameter("Cantitate", cantitate) :
                new ObjectParameter("Cantitate", typeof(int));
    
            var termenGarantieParameter = termenGarantie.HasValue ?
                new ObjectParameter("TermenGarantie", termenGarantie) :
                new ObjectParameter("TermenGarantie", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertTipProduse", numeParameter, unitateMasuraParameter, pretKgParameter, cantitateParameter, termenGarantieParameter, iDTipProdus);
        }
    
        public virtual int insertVanzari(ObjectParameter iDVanzari, Nullable<int> iDProdus)
        {
            var iDProdusParameter = iDProdus.HasValue ?
                new ObjectParameter("IDProdus", iDProdus) :
                new ObjectParameter("IDProdus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertVanzari", iDVanzari, iDProdusParameter);
        }
    
        public virtual int Login_Sel(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Login_Sel", idParameter);
        }
    
        public virtual int modificareStatusProdus(Nullable<int> iDProdus)
        {
            var iDProdusParameter = iDProdus.HasValue ?
                new ObjectParameter("IDProdus", iDProdus) :
                new ObjectParameter("IDProdus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificareStatusProdus", iDProdusParameter);
        }
    
        public virtual int Project_Del(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Project_Del", iDParameter);
        }
    
        public virtual int Project_Ins(ObjectParameter iD, string echipament, string projects, string partNOPainting, string partNOEngraving, string partNOEOL, Nullable<double> cycletimesec1pcs, Nullable<double> cycletimemin100pcs)
        {
            var echipamentParameter = echipament != null ?
                new ObjectParameter("Echipament", echipament) :
                new ObjectParameter("Echipament", typeof(string));
    
            var projectsParameter = projects != null ?
                new ObjectParameter("Projects", projects) :
                new ObjectParameter("Projects", typeof(string));
    
            var partNOPaintingParameter = partNOPainting != null ?
                new ObjectParameter("PartNOPainting", partNOPainting) :
                new ObjectParameter("PartNOPainting", typeof(string));
    
            var partNOEngravingParameter = partNOEngraving != null ?
                new ObjectParameter("PartNOEngraving", partNOEngraving) :
                new ObjectParameter("PartNOEngraving", typeof(string));
    
            var partNOEOLParameter = partNOEOL != null ?
                new ObjectParameter("PartNOEOL", partNOEOL) :
                new ObjectParameter("PartNOEOL", typeof(string));
    
            var cycletimesec1pcsParameter = cycletimesec1pcs.HasValue ?
                new ObjectParameter("Cycletimesec1pcs", cycletimesec1pcs) :
                new ObjectParameter("Cycletimesec1pcs", typeof(double));
    
            var cycletimemin100pcsParameter = cycletimemin100pcs.HasValue ?
                new ObjectParameter("Cycletimemin100pcs", cycletimemin100pcs) :
                new ObjectParameter("Cycletimemin100pcs", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Project_Ins", iD, echipamentParameter, projectsParameter, partNOPaintingParameter, partNOEngravingParameter, partNOEOLParameter, cycletimesec1pcsParameter, cycletimemin100pcsParameter);
        }
    
        public virtual int Project_Sel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Project_Sel");
        }
    
        public virtual int Project_Upd(Nullable<int> iD, string echipament, string projects, string partNOPainting, string partNOEngraving, string partNOEOL, Nullable<double> cycletimesec1pcs, Nullable<double> cycletimemin100pcs)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var echipamentParameter = echipament != null ?
                new ObjectParameter("Echipament", echipament) :
                new ObjectParameter("Echipament", typeof(string));
    
            var projectsParameter = projects != null ?
                new ObjectParameter("Projects", projects) :
                new ObjectParameter("Projects", typeof(string));
    
            var partNOPaintingParameter = partNOPainting != null ?
                new ObjectParameter("PartNOPainting", partNOPainting) :
                new ObjectParameter("PartNOPainting", typeof(string));
    
            var partNOEngravingParameter = partNOEngraving != null ?
                new ObjectParameter("PartNOEngraving", partNOEngraving) :
                new ObjectParameter("PartNOEngraving", typeof(string));
    
            var partNOEOLParameter = partNOEOL != null ?
                new ObjectParameter("PartNOEOL", partNOEOL) :
                new ObjectParameter("PartNOEOL", typeof(string));
    
            var cycletimesec1pcsParameter = cycletimesec1pcs.HasValue ?
                new ObjectParameter("Cycletimesec1pcs", cycletimesec1pcs) :
                new ObjectParameter("Cycletimesec1pcs", typeof(double));
    
            var cycletimemin100pcsParameter = cycletimemin100pcs.HasValue ?
                new ObjectParameter("Cycletimemin100pcs", cycletimemin100pcs) :
                new ObjectParameter("Cycletimemin100pcs", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Project_Upd", iDParameter, echipamentParameter, projectsParameter, partNOPaintingParameter, partNOEngravingParameter, partNOEOLParameter, cycletimesec1pcsParameter, cycletimemin100pcsParameter);
        }
    
        public virtual ObjectResult<selectAmbalaj_Result> selectAmbalaj()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectAmbalaj_Result>("selectAmbalaj");
        }
    
        public virtual ObjectResult<selectPersoana_Result> selectPersoana()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectPersoana_Result>("selectPersoana");
        }

        public virtual ObjectResult<selectProdus_Result> selectProdus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectProdus_Result>("selectProdus");
        }
        //public virtual ObjectResult<Produse> selectProdus()
        //{
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Produse>("selectProdus");
        //}

        public virtual ObjectResult<selectReceptie_Result> selectReceptie()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectReceptie_Result>("selectReceptie");
        }
    
        public virtual ObjectResult<selectTipProduse_Result> selectTipProduse()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectTipProduse_Result>("selectTipProduse");
        }
    
        public virtual ObjectResult<selectVanzari_Result> selectVanzari()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectVanzari_Result>("selectVanzari");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int updateAmbalaj(string denumire, Nullable<int> iDAmbalaj)
        {
            var denumireParameter = denumire != null ?
                new ObjectParameter("Denumire", denumire) :
                new ObjectParameter("Denumire", typeof(string));
    
            var iDAmbalajParameter = iDAmbalaj.HasValue ?
                new ObjectParameter("IDAmbalaj", iDAmbalaj) :
                new ObjectParameter("IDAmbalaj", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateAmbalaj", denumireParameter, iDAmbalajParameter);
        }
    
        public virtual int updatePersoana(string nume, Nullable<int> iDPersoana)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            var iDPersoanaParameter = iDPersoana.HasValue ?
                new ObjectParameter("IDPersoana", iDPersoana) :
                new ObjectParameter("IDPersoana", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatePersoana", numeParameter, iDPersoanaParameter);
        }
    
        public virtual int updateProduse(Nullable<int> iDProdus, Nullable<int> iDAmbalaj, Nullable<System.DateTime> dataAmbalare, string status, Nullable<int> iDTipProdus)
        {
            var iDProdusParameter = iDProdus.HasValue ?
                new ObjectParameter("IDProdus", iDProdus) :
                new ObjectParameter("IDProdus", typeof(int));
    
            var iDAmbalajParameter = iDAmbalaj.HasValue ?
                new ObjectParameter("IDAmbalaj", iDAmbalaj) :
                new ObjectParameter("IDAmbalaj", typeof(int));
    
            var dataAmbalareParameter = dataAmbalare.HasValue ?
                new ObjectParameter("DataAmbalare", dataAmbalare) :
                new ObjectParameter("DataAmbalare", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var iDTipProdusParameter = iDTipProdus.HasValue ?
                new ObjectParameter("IDTipProdus", iDTipProdus) :
                new ObjectParameter("IDTipProdus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateProduse", iDProdusParameter, iDAmbalajParameter, dataAmbalareParameter, statusParameter, iDTipProdusParameter);
        }
    
        public virtual int updateReceptie(Nullable<int> iDReceptie, Nullable<int> iDProdus, Nullable<int> iDPersoana, Nullable<System.DateTime> dataReceptie, string observatii, Nullable<bool> rebut)
        {
            var iDReceptieParameter = iDReceptie.HasValue ?
                new ObjectParameter("IDReceptie", iDReceptie) :
                new ObjectParameter("IDReceptie", typeof(int));
    
            var iDProdusParameter = iDProdus.HasValue ?
                new ObjectParameter("IDProdus", iDProdus) :
                new ObjectParameter("IDProdus", typeof(int));
    
            var iDPersoanaParameter = iDPersoana.HasValue ?
                new ObjectParameter("IDPersoana", iDPersoana) :
                new ObjectParameter("IDPersoana", typeof(int));
    
            var dataReceptieParameter = dataReceptie.HasValue ?
                new ObjectParameter("DataReceptie", dataReceptie) :
                new ObjectParameter("DataReceptie", typeof(System.DateTime));
    
            var observatiiParameter = observatii != null ?
                new ObjectParameter("Observatii", observatii) :
                new ObjectParameter("Observatii", typeof(string));
    
            var rebutParameter = rebut.HasValue ?
                new ObjectParameter("Rebut", rebut) :
                new ObjectParameter("Rebut", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateReceptie", iDReceptieParameter, iDProdusParameter, iDPersoanaParameter, dataReceptieParameter, observatiiParameter, rebutParameter);
        }
    
        public virtual int updateTipProduse(string nume, string unitateMasura, Nullable<int> pretKg, Nullable<int> cantitate, Nullable<int> termenGarantie, Nullable<int> iDTipProdus)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            var unitateMasuraParameter = unitateMasura != null ?
                new ObjectParameter("UnitateMasura", unitateMasura) :
                new ObjectParameter("UnitateMasura", typeof(string));
    
            var pretKgParameter = pretKg.HasValue ?
                new ObjectParameter("PretKg", pretKg) :
                new ObjectParameter("PretKg", typeof(int));
    
            var cantitateParameter = cantitate.HasValue ?
                new ObjectParameter("Cantitate", cantitate) :
                new ObjectParameter("Cantitate", typeof(int));
    
            var termenGarantieParameter = termenGarantie.HasValue ?
                new ObjectParameter("TermenGarantie", termenGarantie) :
                new ObjectParameter("TermenGarantie", typeof(int));
    
            var iDTipProdusParameter = iDTipProdus.HasValue ?
                new ObjectParameter("IDTipProdus", iDTipProdus) :
                new ObjectParameter("IDTipProdus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateTipProduse", numeParameter, unitateMasuraParameter, pretKgParameter, cantitateParameter, termenGarantieParameter, iDTipProdusParameter);
        }
    
        public virtual int updateVanzari(Nullable<int> iDVanzari, Nullable<int> iDProdus, Nullable<System.DateTime> dataVanzare)
        {
            var iDVanzariParameter = iDVanzari.HasValue ?
                new ObjectParameter("IDVanzari", iDVanzari) :
                new ObjectParameter("IDVanzari", typeof(int));
    
            var iDProdusParameter = iDProdus.HasValue ?
                new ObjectParameter("IDProdus", iDProdus) :
                new ObjectParameter("IDProdus", typeof(int));
    
            var dataVanzareParameter = dataVanzare.HasValue ?
                new ObjectParameter("DataVanzare", dataVanzare) :
                new ObjectParameter("DataVanzare", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateVanzari", iDVanzariParameter, iDProdusParameter, dataVanzareParameter);
        }
    
        public virtual ObjectResult<VAR1VerificareValabilitate_Result> VAR1VerificareValabilitate(Nullable<int> iDProdus)
        {
            var iDProdusParameter = iDProdus.HasValue ?
                new ObjectParameter("IDProdus", iDProdus) :
                new ObjectParameter("IDProdus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VAR1VerificareValabilitate_Result>("VAR1VerificareValabilitate", iDProdusParameter);
        }
    
        public virtual ObjectResult<VAR1VerificareVanzari_Result> VAR1VerificareVanzari(ObjectParameter iDVanzari, Nullable<int> iDProdus)
        {
            var iDProdusParameter = iDProdus.HasValue ?
                new ObjectParameter("IDProdus", iDProdus) :
                new ObjectParameter("IDProdus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VAR1VerificareVanzari_Result>("VAR1VerificareVanzari", iDVanzari, iDProdusParameter);
        }
    
        public virtual ObjectResult<verificareLaReceptie_Result> verificareLaReceptie(ObjectParameter iDReceptie, Nullable<int> iDProdus)
        {
            var iDProdusParameter = iDProdus.HasValue ?
                new ObjectParameter("IDProdus", iDProdus) :
                new ObjectParameter("IDProdus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verificareLaReceptie_Result>("verificareLaReceptie", iDReceptie, iDProdusParameter);
        }
    
        public virtual ObjectResult<verificareStoc_Result> verificareStoc(string nume)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<verificareStoc_Result>("verificareStoc", numeParameter);
        }
    }
}
